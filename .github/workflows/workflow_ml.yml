# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: UKB cTI CI/CD pipeline

on:
  push:
    branches: [ "prod" ]

permissions:
  contents: read

jobs:

  # integrate python code with basic testing
  build_python:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest ./test/test_all.py -k "test_check_all_flags_shouldpass"

  # integrate docker with build testing
  test_docker:

    needs: [build_python]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      working-directory: ./src/aws/tf_serving
      run: |
        docker build -t cti-pred . --file Dockerfile
# INCOMPLETE
  # deploy docker
  deploy_ecr:

    needs: [test_docker]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      working-directory: ./src/aws/tf_serving
      run: |
        docker build -t cti-pred . --file Dockerfile
        docker tag cti-pred:latest public.ecr.aws/v4u9u1t8/cti-pred:latest
        docker push public.ecr.aws/v4u9u1t8/cti-pred:latest

  # deploy to aws rds
# INCOMPLETE
  deploy_rds:

    needs: [build_python]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
