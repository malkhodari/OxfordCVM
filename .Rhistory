paste0("^",
paste0(bb_bodycomp_vars, collapse="-|^"),
"-"),
names(df),
value=TRUE)
# arterial stiffness variables
bb_art_vars = df_vars$FieldID[df_vars$Category==100007]
excl = grep("^4186-|^2404-|^2405-", bb_art_vars, value=TRUE)
bb_art_vars = bb_art_vars[!bb_art_vars %in% excl]
bb_art_vars = bb_art_vars[!bb_art_vars %in% bulkvars]
# carotid ultrasound variables
bb_car_vars = df_vars$FieldID[df_vars$Category==101]
bb_car_vars = grep(
paste0("^", paste0(bb_car_vars,collapse="-|^") ,"-"),
names(df),
value=TRUE)
excl = grep(
paste("^",
paste(c("22682","22683","22684","22685","12291","12292"),
collapse="-|^"),
"-"),
bb_car_vars,
value=TRUE)
bb_car_vars = bb_car_vars[!bb_car_vars %in% excl]
bb_car_vars = bb_car_vars[!bb_car_vars %in% bulkvars]
# spirometry variables
bb_spir_vars = grep(
"^20151-|^20150-|^20153-|^20258-|^20156-|^20154-",
names(df),
value=TRUE)
# ECG variables
bb_ecgrest_vars = grep(
"^12336-|^12338-|^22334-|^22330-|^22338-|^12340-|
^22331-|^22332-|^22333-|^22335-|^22336-|^22337-",
names(df),
value=TRUE)
# percentages of blood are coded with tens, the other variables
# refer to the methods of sample analysis
bb_blood_vars = df_vars$FieldID[df_vars$Category==100081 |
df_vars$Category==17518 |
df_vars$Category==100083]
bb_blood_vars = grep(
paste0("^", paste0(bb_blood_vars, collapse="-|^"), "-"),
names(df),
value=TRUE)
excl = grep("^30505-|^30515-|^30525-|^30535-", bb_blood_vars, value=TRUE)
bb_blood_vars = bb_blood_vars[!bb_blood_vars %in% excl]
# antropometric variables
#range = number_range(46, 51)
#bb_antro_vars = grep(range, names(df), value=TRUE)
### Combine variables together
vars = c("eid", "12187-2.0", Age, Sex, StudyDate, BPSys, BPSys2, BPDia,
BPDia2,bb_CMR_vars,bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars, bb_spir_vars,bb_ecgrest_vars,
bb_antro_vars,bb_dis_vars,bb_med_vars)
vars = vars[!vars %in% c(bulkvars, stratavars)]
vars_2 = c(grep("\\-2.0",
c(Age, StudyDate,BPSys,BPSys2,BPDia,BPDia2,
bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars,
bb_ecgrest_vars,bb_antro_vars),
value=TRUE),
grep("\\-2.", bb_CMR_vars, value=TRUE),
bb_spir_vars, bb_dis_vars, bb_med_vars)
vars_2 = vars[!vars_2 %in% c(bulkvars, stratavars)]
# cardiac MR variables
# removed all blood pressure related variables, kept cardiac
# structure and heart rate variables, kept pulse pressure
bb_CMR_vars = grep(
"^22426-|^22425-|^22424-|^22420-|^22421-|^22422-
|^22423-|^12702-|^12682-|^12673-|^12679-|^12676-
|^12686-|^12685-|^22427-",
names(df),
value=TRUE)
bb_CMR_vars = bb_CMR_vars[!bb_CMR_vars %in% bulkvars]
cardiac_seg = read.csv("../ukbreturn1886/UK Biobank Imaging Enhancement Cardiac Phenotypes.csv")
bb_CMR_vars = c(bb_CMR_vars,
names(cardiac_seg)[2:length(names(cardiac_seg))])
# brain MR variables
bb_BMR_vars = df_vars$FieldID[df_vars$Category==110 |
df_vars$Category==112 |
df_vars$Category==1102 |
df_vars$Category==109 |
df_vars$Category==134 |
df_vars$Category==135 |
df_vars$Category==1101]
bb_BMR_vars = grep(
paste0("^", paste0(bb_BMR_vars, collapse="-|^"), "-"),
names(df),
value=TRUE)
excl = grep(
paste0("^",
paste0(c("20216","25756","25757","25757",
"25758","25759","25746"), collapse="-|^"),
"-"),
bb_BMR_vars, value=TRUE) # exclude certain variables
bb_BMR_vars = bb_BMR_vars[!bb_BMR_vars %in% excl]
bb_BMR_vars = bb_BMR_vars[!bb_BMR_vars %in% bulkvars]
# cardiac MR variables
# removed all blood pressure related variables, kept cardiac
# structure and heart rate variables, kept pulse pressure
bb_CMR_vars = grep(
"^22426-|^22425-|^22424-|^22420-|^22421-|^22422-
|^22423-|^12702-|^12682-|^12673-|^12679-|^12676-
|^12686-|^12685-|^22427-",
names(df),
value=TRUE)
bb_CMR_vars = bb_CMR_vars[!bb_CMR_vars %in% bulkvars]
cardiac_seg = read.csv("../ukbreturn1886/UK Biobank Imaging Enhancement Cardiac Phenotypes.csv")
bb_CMR_vars = c(bb_CMR_vars,
names(cardiac_seg)[2:length(names(cardiac_seg))])
# abdominal MR variables
bb_AMR_vars = df_vars$FieldID[df_vars$Category==126 |
df_vars$Category==149]
bb_AMR_vars = grep(
paste0("^", paste0(bb_AMR_vars, collapse="-|^"), "-"),
names(df),
value=TRUE)
excl = grep(
paste0("^", paste0(c("22412", "22414"), collapse="-|^"), "-"),
bb_AMR_vars,
value=TRUE) # exclude certain variables
bb_AMR_vars = bb_AMR_vars[!bb_AMR_vars %in% excl]
bb_AMR_vars= bb_AMR_vars[!bb_AMR_vars %in% bulkvars]
# Body composition variables
bb_bodycomp_vars = df_vars$FieldID[df_vars$Category==124 |
df_vars$Category==125 |
df_vars$Category==100009 |
df_vars$Category==170]
bb_bodycomp_vars = grep(
paste0("^",
paste0(bb_bodycomp_vars, collapse="-|^"),
"-"),
names(df),
value=TRUE)
# arterial stiffness variables
bb_art_vars = df_vars$FieldID[df_vars$Category==100007]
excl = grep("^4186-|^2404-|^2405-", bb_art_vars, value=TRUE)
bb_art_vars = bb_art_vars[!bb_art_vars %in% excl]
bb_art_vars = bb_art_vars[!bb_art_vars %in% bulkvars]
# carotid ultrasound variables
bb_car_vars = df_vars$FieldID[df_vars$Category==101]
bb_car_vars = grep(
paste0("^", paste0(bb_car_vars,collapse="-|^") ,"-"),
names(df),
value=TRUE)
excl = grep(
paste("^",
paste(c("22682","22683","22684","22685","12291","12292"),
collapse="-|^"),
"-"),
bb_car_vars,
value=TRUE)
bb_car_vars = bb_car_vars[!bb_car_vars %in% excl]
bb_car_vars = bb_car_vars[!bb_car_vars %in% bulkvars]
# spirometry variables
bb_spir_vars = grep(
"^20151-|^20150-|^20153-|^20258-|^20156-|^20154-",
names(df),
value=TRUE)
# ECG variables
bb_ecgrest_vars = grep(
"^12336-|^12338-|^22334-|^22330-|^22338-|^12340-|
^22331-|^22332-|^22333-|^22335-|^22336-|^22337-",
names(df),
value=TRUE)
# percentages of blood are coded with tens, the other variables
# refer to the methods of sample analysis
bb_blood_vars = df_vars$FieldID[df_vars$Category==100081 |
df_vars$Category==17518 |
df_vars$Category==100083]
bb_blood_vars = grep(
paste0("^", paste0(bb_blood_vars, collapse="-|^"), "-"),
names(df),
value=TRUE)
excl = grep("^30505-|^30515-|^30525-|^30535-", bb_blood_vars, value=TRUE)
bb_blood_vars = bb_blood_vars[!bb_blood_vars %in% excl]
# antropometric variables
#range = number_range(46, 51)
#bb_antro_vars = grep(range, names(df), value=TRUE)
### Combine variables together
vars = c("eid", "12187-2.0", Age, Sex, StudyDate, BPSys, BPSys2, BPDia,
BPDia2,bb_CMR_vars,bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars, bb_spir_vars,bb_ecgrest_vars,
bb_antro_vars,bb_dis_vars,bb_med_vars)
vars = vars[!vars %in% c(bulkvars, stratavars)]
vars_2 = c(grep("\\-2.0",
c(Age, StudyDate,BPSys,BPSys2,BPDia,BPDia2,
bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars,
bb_ecgrest_vars,bb_antro_vars),
value=TRUE),
grep("\\-2.", bb_CMR_vars, value=TRUE),
bb_spir_vars, bb_dis_vars, bb_med_vars)
vars_2 = vars[!vars_2 %in% c(bulkvars, stratavars)]
### Combine variables together
vars = c("eid", "12187-2.0", Age, Sex, StudyDate, BPSys, BPSys2, BPDia,
BPDia2,bb_CMR_vars,bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars, bb_spir_vars,bb_ecgrest_vars,
bb_antro_vars,bb_dis_vars,bb_med_vars)
vars = vars[!vars %in% c(bulkvars, stratavars)]
vars_2 = c(grep("\\-2.0",
c(Age, StudyDate,BPSys,BPSys2,BPDia,BPDia2,
bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars,
bb_ecgrest_vars), # bb_antro_vars
value=TRUE),
grep("\\-2.", bb_CMR_vars, value=TRUE),
bb_spir_vars, bb_dis_vars, bb_med_vars)
vars_2 = vars[!vars_2 %in% c(bulkvars, stratavars)]
vars = c("eid", "12187-2.0", Age, Sex, StudyDate, BPSys, BPSys2, BPDia,
BPDia2,bb_CMR_vars,bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars, bb_spir_vars,bb_ecgrest_vars,
bb_dis_vars,bb_med_vars) # bb_antro_vars
vars = vars[!vars %in% c(bulkvars, stratavars)]
vars_2 = c(grep("\\-2.0",
c(Age, StudyDate,BPSys,BPSys2,BPDia,BPDia2,
bb_BMR_vars,bb_AMR_vars,bb_bodycomp_vars,
bb_art_vars,bb_blood_vars,bb_car_vars,
bb_ecgrest_vars), # bb_antro_vars
value=TRUE),
grep("\\-2.", bb_CMR_vars, value=TRUE),
bb_spir_vars, bb_dis_vars, bb_med_vars)
vars_2 = vars[!vars_2 %in% c(bulkvars, stratavars)]
#all
variables.a = vars_2[vars_2 %in% c(bb_CMR_vars,bb_BMR_vars,bb_AMR_vars,
bb_bodycomp_vars,bb_art_vars,
bb_car_vars,bb_blood_vars,bb_spir_vars,
bb_ecgrest_vars,Sex,Age)]
#cardiac
variables.b = vars_2[vars_2 %in% c(bb_CMR_vars, bb_art_vars, bb_car_vars)]
#brain
variables.c = vars_2[vars_2 %in% bb_BMR_vars]
## cardiac + brain + carotid ultrasound
variables.d = vars_2[vars_2 %in% c(bb_CMR_vars,bb_BMR_vars,
bb_art_vars,bb_car_vars,Sex,Age)]
variables.a
### population variables
# all
data_prep.1 = df[df$Record.Id %in%
bb_data$Record.Id[!is.na(bb_data$`BPSys-2.0`)], ]
# only women
data_prep.2 = df[df$Record.Id %in%
bb_data$Record.Id[!is.na(bb_data$`BPSys-2.0`) &
bb_data[,Sex]=="0"]
, ]
# only men
data_prep.3 = df[df$Record.Id %in%
bb_data$Record.Id[!is.na(bb_data$`BPSys-2.0`) &
bb_data[,Sex]=="1"]
, ]
# exclude those with heart attack/angina/stroke at time of imaging
data_prep.4 = df[df$Record.Id %in%
bb_data$Record.Id[
!is.na(bb_data$`BPSys-2.0`) &
(bb_data$`6150-2.0` < 0 |
bb_data$`6150-2.0` > 3 |
is.na(bb_data$`6150-2.0`)) &
(bb_data$diag_min_datedif > 0 |
is.na(bb_data$diag_min_datedif))
]
, ]
# only women: exclude those with heart attack/angina/stroke at time of imaging
data_prep.5 = df[df$Record.Id %in%
bb_data$Record.Id[
!is.na(bb_data$`BPSys-2.0`) &
bb_data[,Sex]=="0" &
(bb_data$`6150-2.0` < 0 |
bb_data$`6150-2.0` > 3 |
is.na(bb_data$`6150-2.0`)) &
(bb_data$diag_min_datedif > 0 |
is.na(bb_data$diag_min_datedif))
]
, ]
### population variables
# all
data_prep.1 = df[df$Record.Id %in%
df$Record.Id[!is.na(df$`BPSys-2.0`)], ]
# only women
data_prep.2 = df[df$Record.Id %in%
df$Record.Id[!is.na(df$`BPSys-2.0`) &
df[,Sex]=="0"]
, ]
# only men
data_prep.3 = df[df$Record.Id %in%
df$Record.Id[!is.na(df$`BPSys-2.0`) &
df[,Sex]=="1"]
, ]
# exclude those with heart attack/angina/stroke at time of imaging
data_prep.4 = df[df$Record.Id %in%
df$Record.Id[
!is.na(df$`BPSys-2.0`) &
(df$`6150-2.0` < 0 |
df$`6150-2.0` > 3 |
is.na(df$`6150-2.0`)) &
(df$diag_min_datedif > 0 |
is.na(df$diag_min_datedif))
]
, ]
# only women: exclude those with heart attack/angina/stroke at time of imaging
data_prep.5 = df[df$Record.Id %in%
df$Record.Id[
!is.na(df$`BPSys-2.0`) &
df[,Sex]=="0" &
(df$`6150-2.0` < 0 |
df$`6150-2.0` > 3 |
is.na(df$`6150-2.0`)) &
(df$diag_min_datedif > 0 |
is.na(df$diag_min_datedif))
]
, ]
# > 140/80
target_Record.Id.1 = bb_data$Record.Id[bb_data$`BPSys-2.0` > 140 |
bb_data$`BPDia-2.0` > 90]
background_Record.Id.1 = bb_data$Record.Id[bb_data$`BPSys-2.0` < 120 &
bb_data$`BPDia-2.0` < 80]
between_Record.Id.1 = bb_data$Record.Id[
-which(bb_data$Record.Id %in%
c(as.character(background_Record.Id.1),
as.character(target_Record.Id.1))
)
]
# > 160/100
target_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` > 160 |
df$`BPDia-2.0` > 100]
background_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.2 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.2),
as.character(target_Record.Id.2))
)
]
# target: event at time of imaging. Background: no event, no event on follow
target_Record.Id.3 = df$Record.Id[df$`6150-2.0` > 0 & df$`6150-2.0` < 4]
background_Record.Id.3 = df$Record.Id[(df$`6150-2.0` < 0 | df$`6150-2.0` == 4) &
(df$`6150-3.0` < 0 | df$`6150-3.0`==4)]
between_Record.Id.3 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.3),
as.character(target_Record.Id.3))
)
]
## target/background criteria
# > 140/80
target_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` > 140 |
df$`BPDia-2.0` > 90]
background_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.1 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.1),
as.character(target_Record.Id.1))
)
]
# > 160/100
target_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` > 160 |
df$`BPDia-2.0` > 100]
background_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.2 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.2),
as.character(target_Record.Id.2))
)
]
# target: event at time of imaging. Background: no event, no event on follow
target_Record.Id.3 = df$Record.Id[df$`6150-2.0` > 0 & df$`6150-2.0` < 4]
background_Record.Id.3 = df$Record.Id[(df$`6150-2.0` < 0 | df$`6150-2.0` == 4) &
(df$`6150-3.0` < 0 | df$`6150-3.0`==4)]
between_Record.Id.3 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.3),
as.character(target_Record.Id.3))
)
]
## target/background criteria
# > 140/80
target_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` > 140 |
df$`BPDia-2.0` > 90]
background_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.1 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.1),
as.character(target_Record.Id.1))
)
]
# > 160/100
target_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` > 160 |
df$`BPDia-2.0` > 100]
background_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.2 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.2),
as.character(target_Record.Id.2))
)
]
# target: event at time of imaging. Background: no event, no event on follow
target_Record.Id.3 = df$Record.Id[df$`6150-2.0` > 0 & df$`6150-2.0` < 4]
background_Record.Id.3 = df$Record.Id[(df$`6150-2.0` < 0 |
df$`6150-2.0` == 4) &
(df$`6150-3.0` < 0 |
df$`6150-3.0`==4)]
between_Record.Id.3 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.3),
as.character(target_Record.Id.3))
)
]
# target: no event at time of imaging, but at follow-up. Background: no event,
# no event on follow-up, low BP
target_Record.Id.4 = df$Record.Id[
(df$`6150-2.0` > 0 & df$`6150-2.0` < 4) &
(df$`6150-3.0` > 0 | df$`6150-3.0` < 4)]
background_Record.Id.4 = df$Record.Id[
(df$`6150-2.0` < 0 | df$`6150-2.0` == 4) &
(df$`6150-3.0`<0|df$`6150-3.0` == 4)]
between_Record.Id.4 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.4),
as.character(target_Record.Id.4))
)
]
install.packages("hdf5r")
library(hdf5r)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# The code below is refactored from the DP_prep_par.R
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
library(hdf5r)
View(df)
target_Record.Id.4
## target/background criteria
# > 140/80
target_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` > 140 |
df$`BPDia-2.0` > 90]
background_Record.Id.1 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.1 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.1),
as.character(target_Record.Id.1))
)
]
# > 160/100
target_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` > 160 |
df$`BPDia-2.0` > 100]
background_Record.Id.2 = df$Record.Id[df$`BPSys-2.0` < 120 &
df$`BPDia-2.0` < 80]
between_Record.Id.2 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.2),
as.character(target_Record.Id.2))
)
]
# target: event at time of imaging. Background: no event, no event on follow
target_Record.Id.3 = df$Record.Id[df$`6150-2.0` > 0 & df$`6150-2.0` < 4]
background_Record.Id.3 = df$Record.Id[(df$`6150-2.0` < 0 |
df$`6150-2.0` == 4) &
(df$`6150-3.0` < 0 |
df$`6150-3.0`==4)]
between_Record.Id.3 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.3),
as.character(target_Record.Id.3))
)
]
# target: no event at time of imaging, but at follow-up. Background: no event,
# no event on follow-up, low BP
target_Record.Id.4 = df$Record.Id[
(df$`6150-2.0` > 0 & df$`6150-2.0` < 4) &
(df$`6150-3.0` > 0 | df$`6150-3.0` < 4)]
background_Record.Id.4 = df$Record.Id[
(df$`6150-2.0` < 0 | df$`6150-2.0` == 4) &
(df$`6150-3.0`<0|df$`6150-3.0` == 4)]
between_Record.Id.4 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.4),
as.character(target_Record.Id.4))
)
]
View(data_prep.5)
target_Record.Id.1
background_Record.Id.1
between_Record.Id.4
between_Record.Id.4 = df$Record.Id[
-which(df$Record.Id %in%
c(as.character(background_Record.Id.4),
as.character(target_Record.Id.4))
)
]
background_Record.Id.4
background_Record.Id.4 = df$Record.Id[
(df$`6150-2.0` < 0 | df$`6150-2.0` == 4) &
(df$`6150-3.0`<0|df$`6150-3.0` == 4)]
background_Record.Id.4
between_Record.Id.3
file.path
file.path
file.path(1,2\)
file.path(1,2)
write_xlsx
library(xlsx)
write_xlsx
?write_xlsx
write_xlsx
library(xlsx)
write_xlsx
df$`BPSys-2.0`
sum(is.na(df$`BPSys-2.0`))
sum(is.na(df$`BPSys-2.0`))/length(df$`BPSys-2.0`)
